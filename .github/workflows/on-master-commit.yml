name: Release nightly

on:
  push:
    branches: [master]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  bump_version:
    runs-on: ubuntu-latest

    outputs:
      commit_ref: ${{ steps.autocommit.outputs.commit_hash }}

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Bump version
        run: python ./util/version-bump.py

      - uses: stefanzweifel/git-auto-commit-action@v4
        id: autocommit
        with:
          commit_message: Automatic version bump

  build_unix:
    needs: bump_version

    runs-on: ubuntu-latest

    strategy:
      matrix:
        arch: [amd64, i386, arm64, armhf, riscv64]

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
        with:
          ref: ${{ needs.bump_version.outputs.commit_ref }}

      - name: Login to GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        run: docker compose -f builder/compose.yml up --exit-code-from unix_${{matrix.arch}} unix_${{matrix.arch}}

      - name: Save artifacts
        uses: actions/upload-artifact@v3
        with:
          name: packages
          path: ./build/release/
          if-no-files-found: error

  build_windows:
    needs: bump_version

    runs-on: ubuntu-latest

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
        with:
          ref: ${{ needs.bump_version.outputs.commit_ref }}

      - name: Login to GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        run: docker compose -f builder/compose.yml up --exit-code-from windows_win64 windows_win64

      - name: Save artifacts
        uses: actions/upload-artifact@v3
        with:
          name: packages
          path: ./build/release/
          if-no-files-found: error

  build_windows_installer:
    needs: build_windows

    runs-on: windows-2019

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
        with:
          ref: ${{ needs.bump_version.outputs.commit_ref }}

      - name: Fetch artifacts
        uses: actions/download-artifact@v3
        with:
          name: packages

      - name: Copy .exe and license to installer dir
        run: |
          copy husarnet-daemon-windows-win64.exe platforms\windows\husarnet-daemon.exe
          copy husarnet-windows-win64.exe platforms\windows\husarnet.exe
          copy LICENSE.txt platforms\windows
        shell: cmd

      - name: Building the installer
        run: |
          "%programfiles(x86)%\Inno Setup 6\iscc.exe" platforms\windows\script.iss
        shell: cmd

      - name: Upload installer
        uses: actions/upload-artifact@v3
        with:
          name: windows_installer
          path: platforms\windows\Output\husarnet-setup.exe

  run_tests:
    needs: bump_version

    runs-on: ubuntu-latest

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
        with:
          ref: ${{ needs.bump_version.outputs.commit_ref }}

      - name: Login to GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run autoformatters
        run: docker compose -f builder/compose.yml up --exit-code-from format format

      - name: Run tests
        run: docker compose -f builder/compose.yml up --exit-code-from test test

  release_nightly:
    needs: [bump_version, run_tests, build_unix, build_windows_installer]

    runs-on: [self-hosted, linux, nightly]

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
        with:
          ref: ${{ needs.bump_version.outputs.commit_ref }}

      - name: Fetch artifacts
        uses: actions/download-artifact@v3
        with:
          name: packages

      - name: Fetch Windows installer
        uses: actions/download-artifact@v3
        with:
          name: windows_installer

      - name: Deploy to Husarnet nightly repository
        run: ./deploy/deploy.sh nightly

  build_docker:
    needs: [bump_version, build_unix]

    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - arch: linux/amd64
            arch_alias: amd64
          - arch: linux/arm64/v8
            arch_alias: arm64
          - arch: linux/arm/v7
            arch_alias: armhf

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
        with:
          ref: ${{ needs.bump_version.outputs.commit_ref }}

      - name: Fetch artifacts
        uses: actions/download-artifact@v3
        with:
          name: packages
          path: ./build/release/

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest

      - name: Login to Docker Registry
        uses: docker/login-action@v1
        with:
          registry: docker.io
          username: ${{ secrets.HNETUSER_DOCKERHUB_LOGIN }}
          password: ${{ secrets.HNETUSER_DOCKERHUB_PASSWORD }}

      - name: Login to GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare build
        run: ./platforms/docker/build.sh ${{matrix.arch_alias}}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./platforms/docker/Dockerfile
          platforms: ${{matrix.arch}}
          push: true
          tags: husarnet/husarnet-nightly:${{matrix.arch_alias}}

  release_docker:
    needs: [bump_version, run_tests, build_docker]

    runs-on: ubuntu-latest

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
        with:
          ref: ${{ needs.bump_version.outputs.commit_ref }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest

      - name: Login to Docker Registry
        uses: docker/login-action@v1
        with:
          registry: docker.io
          username: ${{ secrets.HNETUSER_DOCKERHUB_LOGIN }}
          password: ${{ secrets.HNETUSER_DOCKERHUB_PASSWORD }}

      - name: create manifest
        run: |
          docker manifest create husarnet/husarnet-nightly:latest \
          --amend husarnet/husarnet-nightly:amd64 \
          --amend husarnet/husarnet-nightly:arm64 \
          --amend husarnet/husarnet-nightly:armhf
          docker manifest create husarnet/husarnet-nightly:$(cat version.txt) \
          --amend husarnet/husarnet-nightly:amd64 \
          --amend husarnet/husarnet-nightly:arm64 \
          --amend husarnet/husarnet-nightly:armhf

      - name: push manifest
        run: |
          docker manifest push husarnet/husarnet-nightly:latest
          docker manifest push husarnet/husarnet-nightly:$(cat version.txt)
