"jobs":
  "build_docker":
    "needs":
    - "build_unix"
    "runs-on": "ubuntu-latest"
    "steps":
    - "name": "Check out the repo"
      "uses": "actions/checkout@v3"
      "with":
        "ref": "${{ github.ref }}"
    - "name": "Pull artifacts"
      "uses": "actions/download-artifact@v3"
      "with":
        "name": "packages"
        "path": "./build/release/"
    - "name": "Set up QEMU"
      "uses": "docker/setup-qemu-action@v2"
    - "name": "Set up Docker Buildx"
      "uses": "docker/setup-buildx-action@v2"
      "with":
        "version": "latest"
    - "name": "Login to Docker Registry"
      "uses": "docker/login-action@v2"
      "with":
        "password": "${{ secrets.HNETUSER_DOCKERHUB_PASSWORD }}"
        "registry": "docker.io"
        "username": "${{ secrets.HNETUSER_DOCKERHUB_LOGIN }}"
    - "name": "Login to GHCR"
      "uses": "docker/login-action@v2"
      "with":
        "password": "${{ secrets.GITHUB_TOKEN }}"
        "registry": "ghcr.io"
        "username": "${{ github.actor }}"
    - "name": "Prepare build"
      "run": "./platforms/docker/build.sh ${{matrix.arch_alias}}"
    - "name": "Build and push"
      "uses": "docker/build-push-action@v3"
      "with":
        "context": "."
        "file": "./platforms/docker/Dockerfile"
        "platforms": "${{matrix.arch}}"
        "push": true
        "tags": "husarnet/husarnet:${{matrix.arch_alias}}"
    "strategy":
      "matrix":
        "include":
        - "arch": "linux/amd64"
          "arch_alias": "amd64"
        - "arch": "linux/arm64/v8"
          "arch_alias": "arm64"
        - "arch": "linux/arm/v7"
          "arch_alias": "armhf"
  "build_unix":
    "needs": []
    "runs-on": "ubuntu-latest"
    "steps":
    - "name": "Check out the repo"
      "uses": "actions/checkout@v3"
      "with":
        "ref": "${{ github.ref }}"
    - "name": "Login to GHCR"
      "uses": "docker/login-action@v2"
      "with":
        "password": "${{ secrets.GITHUB_TOKEN }}"
        "registry": "ghcr.io"
        "username": "${{ github.actor }}"
    - "name": "Builder run unix_${{matrix.arch}}"
      "run": "docker compose -f builder/compose.yml up --exit-code-from unix_${{matrix.arch}} unix_${{matrix.arch}}"
    - "name": "Push artifacts"
      "uses": "actions/upload-artifact@v3"
      "with":
        "if-no-files-found": "error"
        "name": "packages"
        "path": "./build/release/*${{matrix.arch}}*"
    "strategy":
      "matrix":
        "arch":
        - "amd64"
        - "i386"
        - "arm64"
        - "armhf"
        - "riscv64"
  "build_windows":
    "needs": []
    "runs-on": "ubuntu-latest"
    "steps":
    - "name": "Check out the repo"
      "uses": "actions/checkout@v3"
      "with":
        "ref": "${{ github.ref }}"
    - "name": "Login to GHCR"
      "uses": "docker/login-action@v2"
      "with":
        "password": "${{ secrets.GITHUB_TOKEN }}"
        "registry": "ghcr.io"
        "username": "${{ github.actor }}"
    - "name": "Builder run windows_win64"
      "run": "docker compose -f builder/compose.yml up --exit-code-from windows_win64 windows_win64"
    - "name": "Push artifacts"
      "uses": "actions/upload-artifact@v3"
      "with":
        "if-no-files-found": "error"
        "name": "packages"
        "path": "./build/release/*win64*"
  "build_windows_installer":
    "needs":
    - "build_windows"
    "runs-on": "windows-2019"
    "steps":
    - "name": "Check out the repo"
      "uses": "actions/checkout@v3"
      "with":
        "ref": "${{ github.ref }}"
    - "name": "Pull artifacts"
      "uses": "actions/download-artifact@v3"
      "with":
        "name": "packages"
        "path": "./build/release/"
    - "name": "Copy .exe and license to installer dir"
      "run": |
        copy build\release\husarnet-daemon-windows-win64.exe platforms\windows\husarnet-daemon.exe
        copy build\release\husarnet-windows-win64.exe platforms\windows\husarnet.exe
        copy LICENSE.txt platforms\windows
      "shell": "cmd"
    - "name": "Building the installer"
      "run": |
        "%programfiles(x86)%\Inno Setup 6\iscc.exe" platforms\windows\script.iss
        copy platforms\windows\Output\husarnet-setup.exe build\release\husarnet-setup.exe
      "shell": "cmd"
    - "name": "Push artifacts"
      "uses": "actions/upload-artifact@v3"
      "with":
        "if-no-files-found": "error"
        "name": "packages"
        "path": "./build/release/*setup*"
  "release":
    "needs":
    - "run_tests"
    - "build_unix"
    - "build_windows_installer"
    "runs-on":
    - "self-hosted"
    - "linux"
    - "prod"
    "steps":
    - "name": "Check out the repo"
      "uses": "actions/checkout@v3"
      "with":
        "ref": "${{ github.ref }}"
    - "name": "Pull artifacts"
      "uses": "actions/download-artifact@v3"
      "with":
        "name": "packages"
        "path": "./build/release/"
    - "name": "Deploy to Husarnet prod repository"
      "run": "./deploy/deploy.sh prod"
  "release_docker":
    "needs":
    - "run_tests"
    - "build_docker"
    "runs-on": "ubuntu-latest"
    "steps":
    - "name": "Check out the repo"
      "uses": "actions/checkout@v3"
      "with":
        "ref": "${{ github.ref }}"
    - "name": "Login to Docker Registry"
      "uses": "docker/login-action@v2"
      "with":
        "password": "${{ secrets.HNETUSER_DOCKERHUB_PASSWORD }}"
        "registry": "docker.io"
        "username": "${{ secrets.HNETUSER_DOCKERHUB_LOGIN }}"
    - "name": "create manifest"
      "run": |
        docker manifest create husarnet/husarnet:latest \
        --amend husarnet/husarnet:amd64 \
        --amend husarnet/husarnet:arm64 \
        --amend husarnet/husarnet:armhf
        
        docker manifest create husarnet/husarnet:$(cat version.txt) \
        --amend husarnet/husarnet:amd64 \
        --amend husarnet/husarnet:arm64 \
        --amend husarnet/husarnet:armhf
    - "name": "push manifest"
      "run": |
        docker manifest push husarnet/husarnet:latest
        docker manifest push husarnet/husarnet:$(cat version.txt)
  "release_github":
    "needs":
    - "run_tests"
    - "build_unix"
    - "build_windows_installer"
    "runs-on": "ubuntu-latest"
    "steps":
    - "name": "Pull artifacts"
      "uses": "actions/download-artifact@v3"
      "with":
        "name": "packages"
        "path": "./build/release/"
    - "uses": "marvinpinto/action-automatic-releases@latest"
      "with":
        "automatic_release_tag": "${{ github.ref_name }}"
        "draft": true
        "files": |
          ./build/release/*.deb
          ./build/release/*.tar
          ./build/release/*.rpm
          ./build/release/*setup.exe
        "prerelease": false
        "repo_token": "${{ secrets.GITHUB_TOKEN }}"
  "run_tests":
    "needs": []
    "runs-on": "ubuntu-latest"
    "steps":
    - "name": "Check out the repo"
      "uses": "actions/checkout@v3"
      "with":
        "ref": "${{ github.ref }}"
    - "name": "Login to GHCR"
      "uses": "docker/login-action@v2"
      "with":
        "password": "${{ secrets.GITHUB_TOKEN }}"
        "registry": "ghcr.io"
        "username": "${{ github.actor }}"
    - "name": "Builder run format"
      "run": "docker compose -f builder/compose.yml up --exit-code-from format format"
    - "name": "Builder run test"
      "run": "docker compose -f builder/compose.yml up --exit-code-from test test"
"name": "Release production"
"on":
  "push":
    "tags":
    - "v*"
